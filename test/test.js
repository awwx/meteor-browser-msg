// Generated by CoffeeScript 1.4.0
(function() {
  var child1_start, child1_startup, parent_start, parent_startup, _when;

  if (Meteor.isClient) {
    switch (window.location.pathname) {
      case '/':
        window.name = 'parent';
        Session.set('show', 'home');
        break;
      case '/child1':
        window.name = 'child1';
        Session.set('show', 'child1');
    }
    _when = window.when;
    Template.route.show_home = function() {
      return Session.equals('show', 'home');
    };
    Template.route.show_child1 = function() {
      return Session.equals('show', 'child1');
    };
    Session.set('test_status', 'wait');
    Template.test_browsermsg_home.test_status = function() {
      return Session.get('test_status');
    };
    parent_start = false;
    parent_startup = function() {
      var next_expected, running, timeout_set;
      if (parent_start) {
        throw new Error('oops parent_startup called twice');
      }
      parent_start = true;
      localStorage.clear();
      next_expected = 1;
      running = true;
      timeout_set = false;
      Meteor.BrowserMsg.listen({
        step: function(i) {
          if (!running) {
            return;
          }
          if (!timeout_set) {
            setTimeout((function() {
              if (!running) {
                return;
              }
              running = false;
              Session.set('test_status', 'failed');
              return console.log('timeout');
            }), 3000);
            timeout_set = true;
          }
          if (i === next_expected) {
            if (i === 20) {
              running = false;
              localStorage.setItem('test_browsermsg.child1.close', 'true');
              return Session.set('test_status', 'successful');
            } else {
              return ++next_expected;
            }
          } else {
            running = false;
            return Session.set('test_status', 'failed');
          }
        }
      });
      return Session.set('test_status', 'ready');
    };
    child1_start = false;
    child1_startup = function() {
      var i, storage_change, _i, _results;
      if (child1_start) {
        throw new Error('oops child1_startup called twice');
      }
      child1_start = true;
      storage_change = function(key, val) {
        if (key === 'test_browsermsg.child1.close' && val === 'true') {
          return window.close();
        }
      };
      window.addEventListener('storage', (function(event) {
        return storage_change(event.key, event.newValue);
      }), false);
      _results = [];
      for (i = _i = 1; _i <= 20; i = ++_i) {
        _results.push(Meteor.BrowserMsg.send('step', i));
      }
      return _results;
    };
    Template.test_browsermsg_home.created = function() {
      return parent_startup();
    };
    Template.test_browsermsg_child1.created = function() {
      return child1_startup();
    };
  }

}).call(this);
